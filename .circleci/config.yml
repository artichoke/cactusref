version: 2.1
orbs:
  shellcheck: circleci/shellcheck@1
jobs:
  rust:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - run:
          name: Install Rust Toolchain
          command: |
            rustup toolchain install "$(cat rust-toolchain)"
            rustup component add rustfmt
            rustup component add clippy
            rustc --version --verbose
            cargo --version --verbose
            rustfmt --version
            cargo clippy -- --version
      - run:
          name: Build Workspace
          command: |
            cargo build
      - run:
          name: Test Workspace
          command: cargo test --all-features
          environment:
            RUST_BACKTRACE: 1
            CACTUS_LOG: trace
      - run:
          name: Benchmark Workspace
          command: cargo bench
      - run:
          name: Format Rust Sources
          command: |
            rustfmt --version
            cargo fmt -- --check --color=auto
      - run:
          name: Lint Rust With Clippy
          command: |
            cargo clippy -- --version
            cargo clippy --all-targets --all-features
      - run:
          name: Check Docs
          command: |
            cargo doc --no-deps --all
      - persist_to_workspace:
          root: target
          paths:
            - doc
  shell-format:
    docker:
      - image: peterdavehello/shfmt:latest
    steps:
      - checkout
      - run:
          name: Format Shell Sources
          command: |
            shfmt -version
            shfmt -f . | grep -v target/ | grep -v node_modules/ | xargs shfmt -i 2 -ci -s -w
  text:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - restore_cache:
          key: text-yarn-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Yarn Install
          command: yarn install
      - save_cache:
          key: text-yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Format Text Sources
          command: |
            yarn run prettier --version
            if ! yarn run prettier --check --prose-wrap always './*.{css,html,js,json,md}' '{!(target),!(node_modules)}**/*.{css,html,js,json,md}'; then
              echo "KO: Text files not formatted"
              echo "    Please run 'yarn lint' to resolve text formatting issues"
              exit 1
            fi
  docs-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "12:9a:f6:2f:21:ef:5c:cd:64:08:99:bc:4d:fa:7f:40"
      - attach_workspace:
          at: target
      - restore_cache:
          key: docs-yarn-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Yarn Install
          command: yarn install
      - save_cache:
          key: docs-yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Configure git
          command: |
            git config user.email "ci-build@hyperbo.la"
            git config user.name "ci-build"
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --message "[skip ci] generate docs" --dist target/doc
workflows:
  version: 2
  build:
    jobs:
      - rust
      - shell-format
      - shellcheck/check
      - text
      - docs-deploy:
          requires:
            - rust
          filters:
            branches:
              only: master

version: 2.1
orbs:
  shellcheck: circleci/shellcheck@1
jobs:
  rust:
    docker:
      - image: circleci/rust:buster
    steps:
      - checkout
      - run:
        name: Calculate dependencies
        command: test -e Cargo.lock || cargo generate-lockfile
      - restore_cache:
          key: rust-cargo-v2-{{ checksum "Cargo.lock" }}
      - run:
          name: Install Rust Toolchain
          command: |
            rustup toolchain install "$(cat rust-toolchain)"
            rustup component add rustfmt
            rustup component add clippy
            rustc --version --verbose
            cargo --version --verbose
            rustfmt --version
            cargo clippy -- --version
      - run:
          name: Build Workspace
          command: |
            cargo build
      - run:
          name: Test Workspace
          command: cargo test --all-features
          environment:
            RUST_BACKTRACE: 1
            CACTUS_LOG: trace
      - run:
          name: Format Rust Sources
          command: |
            rustfmt --version
            cargo fmt -- --check --color=auto
      - run:
          name: Lint Rust With Clippy
          command: |
            cargo clippy -- --version
            cargo clippy --all-targets --all-features
      - run:
          name: Check docs
          command: |
            cargo doc --no-deps --all
      - save_cache:
          key: rust-cargo-v2-{{ checksum "Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
      - persist_to_workspace:
          root: target
          paths:
            - doc
  js:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - restore_cache:
          key: js-yarn-v2-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          key: js-yarn-v2-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - run:
          name: yarn check
          command: |
            yarn check --integrity
            yarn check --verify-tree
      - run:
          name: Lint JavaScript with eslint
          command: |
            # yarn run eslint --ext .html,.js .
  shell-format:
    docker:
      - image: peterdavehello/shfmt:latest
    steps:
      - checkout
      - run:
          name: Format Shell Sources
          command: |
            shfmt -version
            shfmt -f . | grep -v target/ | grep -v node_modules/ | grep -v vendor/ | xargs shfmt -i 2 -ci -s -w
  text:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - restore_cache:
          key: text-yarn-v2-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          key: text-yarn-v2-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - run:
          name: Format Text Sources
          command: |
            ./scripts/format-text.sh --check "css"
            ./scripts/format-text.sh --check "html"
            ./scripts/format-text.sh --check "js"
            ./scripts/format-text.sh --check "json"
            ./scripts/format-text.sh --check "yaml"
            ./scripts/format-text.sh --check "yml"
            ./scripts/format-text.sh --check "md"
  gh-pages-deploy:
    docker:
      - image: node:lts
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "12:9a:f6:2f:21:ef:5c:cd:64:08:99:bc:4d:fa:7f:40"
      - attach_workspace:
          at: target
      - restore_cache:
          key: docs-yarn-v1-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          key: docs-yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            yarn run gh-pages \
              --user "ci-build <ci-build@hyperbo.la>" \
              --message "[skip ci] generate docs" \
              --dist target/doc
workflows:
  version: 2
  build:
    jobs:
      - rust
      - js
      - shell-format
      - shellcheck/check:
          exclude: "*/vendor/*"
      - text
      - gh-pages-deploy:
          requires:
            - rust
          filters:
            branches:
              only: master
